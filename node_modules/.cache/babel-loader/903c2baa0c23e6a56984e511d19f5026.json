{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ericafu/CMU/erica-w-fu.github.io/src/components/data/Data.js\";\nimport React from \"react\";\nimport './Data.css';\nimport '../../App.css'; // function to create purple tags\n\nfunction makeTags(str) {\n  if (!str) return str;\n  const tags = str.split(\",\");\n  const final = [];\n\n  for (let tag of tags) {\n    final.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"purple-tag\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this));\n  }\n\n  return final;\n} // function to format a string to include newlines\n\n\nfunction formatText(str) {\n  if (!str) return str; // replace \\n in the string with <br />\n\n  let formatted = [];\n  const lines = str.split(\"\\\\n\");\n\n  for (let line of lines) {\n    formatted.push(line);\n    formatted.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this));\n  }\n\n  return formatted;\n}","map":{"version":3,"sources":["/Users/ericafu/CMU/erica-w-fu.github.io/src/components/data/Data.js"],"names":["React","makeTags","str","tags","split","final","tag","push","formatText","formatted","lines","line"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAO,eAAP,C,CAEA;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,MAAI,CAACA,GAAL,EAAU,OAAOA,GAAP;AAEV,QAAMC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAb;AACA,QAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,GAAT,IAAgBH,IAAhB,EAAsB;AAClBE,IAAAA,KAAK,CAACE,IAAN,eACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,SAAOD,KAAP;AACH,C,CAED;;;AACA,SAASG,UAAT,CAAoBN,GAApB,EAAyB;AACrB,MAAI,CAACA,GAAL,EAAU,OAAOA,GAAP,CADW,CAGrB;;AACA,MAAIO,SAAS,GAAG,EAAhB;AACA,QAAMC,KAAK,GAAGR,GAAG,CAACE,KAAJ,CAAU,KAAV,CAAd;;AAEA,OAAK,IAAIO,IAAT,IAAiBD,KAAjB,EAAwB;AACpBD,IAAAA,SAAS,CAACF,IAAV,CAAeI,IAAf;AACAF,IAAAA,SAAS,CAACF,IAAV,eAAe;AAAA;AAAA;AAAA;AAAA,YAAf;AAEH;;AACD,SAAOE,SAAP;AACH","sourcesContent":["import React from \"react\";\nimport './Data.css'; \nimport '../../App.css'\n\n// function to create purple tags\nfunction makeTags(str) {\n    if (!str) return str;\n\n    const tags = str.split(\",\");\n    const final = []\n\n    for (let tag of tags) {\n        final.push(\n            <div className=\"purple-tag\">\n                <b>{ tag }</b>\n            </div>\n        ) \n    }\n\n    return final;\n}\n\n// function to format a string to include newlines\nfunction formatText(str) {\n    if (!str) return str;\n\n    // replace \\n in the string with <br />\n    let formatted = [];\n    const lines = str.split(\"\\\\n\");\n\n    for (let line of lines) {\n        formatted.push(line);\n        formatted.push(<br />);\n\n    }\n    return formatted;\n}\n"]},"metadata":{},"sourceType":"module"}