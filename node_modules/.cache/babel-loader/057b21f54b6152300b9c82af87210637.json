{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ericafu/CMU/react-website-personal/src/components/pages/Projects.js\";\nimport React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport Section from '../ProjectSections.js';\nimport { readString } from 'react-papaparse';\nimport projectCSV from '../data/projects.csv';\n\nfunction Projects() {\n  const papaConfig = {\n    complete: (results, file) => {\n      console.log('Parsing complete:', results, file);\n    },\n    download: true,\n    error: (error, file) => {\n      console.log('Error while parsing:', error, file);\n    }\n  };\n  var strRead = readString(projectCSV, papaConfig);\n\n  const csvArray = (str = strRead, delim = ',') => {\n    const headers = str.slice(0, str.indexOf('\\n')).split(delim);\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n    const newArray = rows.map(row => {\n      const values = row.split(delim);\n      const eachObject = headers.reduce((obj, header, i) => {\n        obj[header] = values[i];\n        return obj;\n      }, {});\n      return eachObject;\n    });\n    return newArray;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-section\",\n    children: csvArray.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: csvArray.map((item, i) => {\n        /*#__PURE__*/\n        _jsxDEV(Section, {\n          href: \"/\" + i,\n          title: item.title,\n          category: item.category,\n          dates: item.dates,\n          body: item.summary,\n          link: item.link\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Projects;\nexport default Projects;\n\nfunction CSVtoString(file) {\n  let reader = new FileReader();\n  reader.readAsText(file);\n}\n\n_c2 = CSVtoString;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Projects\");\n$RefreshReg$(_c2, \"CSVtoString\");","map":{"version":3,"sources":["/Users/ericafu/CMU/react-website-personal/src/components/pages/Projects.js"],"names":["React","Section","readString","projectCSV","Projects","papaConfig","complete","results","file","console","log","download","error","strRead","csvArray","str","delim","headers","slice","indexOf","split","rows","newArray","map","row","values","eachObject","reduce","obj","header","i","length","item","title","category","dates","summary","link","CSVtoString","reader","FileReader","readAsText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,SAASC,QAAT,GAAoB;AAElB,QAAMC,UAAU,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,OAAjC,EAA0CC,IAA1C;AACD,KAHgB;AAIjBG,IAAAA,QAAQ,EAAE,IAJO;AAKjBC,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQJ,IAAR,KAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCE,KAApC,EAA2CJ,IAA3C;AACD;AAPgB,GAAnB;AAUA,MAAIK,OAAO,GAAGX,UAAU,CAACC,UAAD,EAAaE,UAAb,CAAxB;;AAEA,QAAMS,QAAQ,GAAG,CAACC,GAAG,GAACF,OAAL,EAAcG,KAAK,GAAC,GAApB,KAA4B;AAC3C,UAAMC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAYH,GAAG,CAACI,OAAJ,CAAY,IAAZ,CAAZ,EAA+BC,KAA/B,CAAqCJ,KAArC,CAAhB;AACA,UAAMK,IAAI,GAAGN,GAAG,CAACG,KAAJ,CAAUH,GAAG,CAACI,OAAJ,CAAY,IAAZ,IAAkB,CAA5B,EAA+BC,KAA/B,CAAqC,IAArC,CAAb;AAEA,UAAME,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAUC,GAAG,IAAI;AAChC,YAAMC,MAAM,GAAGD,GAAG,CAACJ,KAAJ,CAAUJ,KAAV,CAAf;AACA,YAAMU,UAAU,GAAGT,OAAO,CAACU,MAAR,CAAe,CAACC,GAAD,EAAMC,MAAN,EAAcC,CAAd,KAAoB;AAClDF,QAAAA,GAAG,CAACC,MAAD,CAAH,GAAcJ,MAAM,CAACK,CAAD,CAApB;AACA,eAAOF,GAAP;AACH,OAHkB,EAGhB,EAHgB,CAAnB;AAIA,aAAOF,UAAP;AACD,KAPgB,CAAjB;AASA,WAAOJ,QAAP;AACD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGR,QAAQ,CAACiB,MAAT,GAAgB,CAAhB,gBACC;AAAA,gBAEEjB,QAAQ,CAACS,GAAT,CAAa,CAACS,IAAD,EAAOF,CAAP,KAAa;AACxB;AAAA,gBAAC,OAAD;AAEE,UAAA,IAAI,EAAG,MAAMA,CAFf;AAGE,UAAA,KAAK,EAAGE,IAAI,CAACC,KAHf;AAIE,UAAA,QAAQ,EAAGD,IAAI,CAACE,QAJlB;AAKE,UAAA,KAAK,EAAGF,IAAI,CAACG,KALf;AAME,UAAA,IAAI,EAAGH,IAAI,CAACI,OANd;AAOE,UAAA,IAAI,EAAGJ,IAAI,CAACK;AAPd,WACQP,CADR;AAAA;AAAA;AAAA;AAAA;AASD,OAVD;AAFF,qBADD,gBAeK;AAAA,gBAAKtB;AAAL;AAAA;AAAA;AAAA;AAAA;AAhBR;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAlDQJ,Q;AAoDT,eAAeA,QAAf;;AAEA,SAASkC,WAAT,CAAqB9B,IAArB,EAA2B;AACzB,MAAI+B,MAAM,GAAG,IAAIC,UAAJ,EAAb;AAEAD,EAAAA,MAAM,CAACE,UAAP,CAAkBjC,IAAlB;AAED;;MALQ8B,W","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport Section from '../ProjectSections.js';\nimport { readString } from 'react-papaparse';\nimport projectCSV from '../data/projects.csv';\n\nfunction Projects() {\n\n  const papaConfig = {\n    complete: (results, file) => {\n      console.log('Parsing complete:', results, file);\n    },\n    download: true,\n    error: (error, file) => {\n      console.log('Error while parsing:', error, file);\n    },\n  };\n\n  var strRead = readString(projectCSV, papaConfig);\n\n  const csvArray = (str=strRead, delim=',') => {\n    const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n    const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n  \n    const newArray = rows.map( row => {\n      const values = row.split(delim);\n      const eachObject = headers.reduce((obj, header, i) => {\n          obj[header] = values[i];\n          return obj;\n      }, {})\n      return eachObject;\n    })\n\n    return newArray;\n  }\n\n  return( \n    <div className=\"project-section\">\n      {csvArray.length>0?\n        <>\n        {\n          csvArray.map((item, i) => {\n            <Section\n              key={ i }\n              href={ \"/\" + i }\n              title={ item.title }\n              category={ item.category }\n              dates={ item.dates }\n              body={ item.summary }\n              link={ item.link }\n            />\n          })\n        }\n      </> : <h1>{file}</h1>}\n    </div>\n  )\n}\n\nexport default Projects;\n\nfunction CSVtoString(file) {\n  let reader = new FileReader();\n\n  reader.readAsText(file);\n\n}"]},"metadata":{},"sourceType":"module"}