{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ericafu/CMU/react-website-personal/src/components/pages/Projects.js\";\nimport React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport Section from '../ProjectSections.js';\nimport csvFile from '../data/projects.csv';\n\nfunction Projects() {\n  const csvArray = (str = readString(csvFile), delim = ',') => {\n    const headers = str.slice(0, str.indexOf('\\n')).split(delim);\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n    const newArray = rows.map(row => {\n      const values = row.split(delim);\n      const eachObject = headers.reduce((obj, header, i) => {\n        obj[header] = values[i];\n        return obj;\n      }, {});\n      return eachObject;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-section\",\n    children: csvArray.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: csvArray.map((item, i) => {\n        /*#__PURE__*/\n        _jsxDEV(Section, {\n          href: \"/\" + i,\n          title: item.title,\n          category: item.category,\n          dates: item.dates,\n          body: item.summary,\n          link: item.link\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Projects;\nexport default Projects; // async function processCSV() {\n//   const str = csvFile;\n//   const delim = ','\n//   const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n//   const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n//   const newArray = rows.map( row => {\n//     const values = row.split(delim);\n//     const eachObject = headers.reduce((obj, header, i) => {\n//         obj[header] = values[i];\n//         return obj;\n//     }, {})\n//     return eachObject;\n//   })\n//   return newArray;\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/ericafu/CMU/react-website-personal/src/components/pages/Projects.js"],"names":["React","Section","csvFile","Projects","csvArray","str","readString","delim","headers","slice","indexOf","split","rows","newArray","map","row","values","eachObject","reduce","obj","header","i","length","item","title","category","dates","summary","link"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,QAAQ,GAAG,CAACC,GAAG,GAACC,UAAU,CAACJ,OAAD,CAAf,EAA0BK,KAAK,GAAC,GAAhC,KAAwC;AACvD,UAAMC,OAAO,GAAGH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAYJ,GAAG,CAACK,OAAJ,CAAY,IAAZ,CAAZ,EAA+BC,KAA/B,CAAqCJ,KAArC,CAAhB;AACA,UAAMK,IAAI,GAAGP,GAAG,CAACI,KAAJ,CAAUJ,GAAG,CAACK,OAAJ,CAAY,IAAZ,IAAkB,CAA5B,EAA+BC,KAA/B,CAAqC,IAArC,CAAb;AAEA,UAAME,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAUC,GAAG,IAAI;AAC9B,YAAMC,MAAM,GAAGD,GAAG,CAACJ,KAAJ,CAAUJ,KAAV,CAAf;AACA,YAAMU,UAAU,GAAGT,OAAO,CAACU,MAAR,CAAe,CAACC,GAAD,EAAMC,MAAN,EAAcC,CAAd,KAAoB;AAClDF,QAAAA,GAAG,CAACC,MAAD,CAAH,GAAcJ,MAAM,CAACK,CAAD,CAApB;AACA,eAAOF,GAAP;AACH,OAHkB,EAGhB,EAHgB,CAAnB;AAIA,aAAOF,UAAP;AACH,KAPgB,CAAjB;AAQD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGb,QAAQ,CAACkB,MAAT,GAAgB,CAAhB,gBACC;AAAA,gBAEElB,QAAQ,CAACU,GAAT,CAAa,CAACS,IAAD,EAAOF,CAAP,KAAa;AACxB;AAAA,gBAAC,OAAD;AAEE,UAAA,IAAI,EAAG,MAAMA,CAFf;AAGE,UAAA,KAAK,EAAGE,IAAI,CAACC,KAHf;AAIE,UAAA,QAAQ,EAAGD,IAAI,CAACE,QAJlB;AAKE,UAAA,KAAK,EAAGF,IAAI,CAACG,KALf;AAME,UAAA,IAAI,EAAGH,IAAI,CAACI,OANd;AAOE,UAAA,IAAI,EAAGJ,IAAI,CAACK;AAPd,WACQP,CADR;AAAA;AAAA;AAAA;AAAA;AASD,OAVD;AAFF,qBADD,GAeK;AAhBR;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAnCQlB,Q;AAqCT,eAAeA,QAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport Section from '../ProjectSections.js'\nimport csvFile from '../data/projects.csv'\n\nfunction Projects() {\n  const csvArray = (str=readString(csvFile), delim=',') => {\n    const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n    const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n    const newArray = rows.map( row => {\n        const values = row.split(delim);\n        const eachObject = headers.reduce((obj, header, i) => {\n            obj[header] = values[i];\n            return obj;\n        }, {})\n        return eachObject;\n    })\n  }\n\n  return( \n    <div className=\"project-section\">\n      {csvArray.length>0?\n        <>\n        {\n          csvArray.map((item, i) => {\n            <Section\n              key={ i }\n              href={ \"/\" + i }\n              title={ item.title }\n              category={ item.category }\n              dates={ item.dates }\n              body={ item.summary }\n              link={ item.link }\n            />\n          })\n        }\n      </> : null}\n    </div>\n  )\n}\n\nexport default Projects;\n\n// async function processCSV() {\n//   const str = csvFile;\n//   const delim = ','\n\n//   const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n//   const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n//   const newArray = rows.map( row => {\n//     const values = row.split(delim);\n//     const eachObject = headers.reduce((obj, header, i) => {\n//         obj[header] = values[i];\n//         return obj;\n//     }, {})\n//     return eachObject;\n//   })\n\n//   return newArray;\n// }"]},"metadata":{},"sourceType":"module"}