{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ericafu/CMU/erica-w-fu.github.io/src/components/FeaturedProjectSection/FeaturedProjectSection.js\";\nimport React from \"react\";\nimport './FeaturedProjectSection.css';\nimport '../../App.css';\nimport ThirtyDayDemo from '../ProjectSection/project-media/30 Day Adulting/30-day-demo.mov';\nimport SentenceMosaics from '../ProjectSection/ProjectMediaComponents/SentenceMosaics.js';\nimport cccImg from '../ProjectSection/project-media/Cross Country Connections/ccc-mother.jpeg'; // function to formas a string to include newlines\n\nfunction formatText(str) {\n  if (!str) return str; // replace \\n in the string with <br />\n\n  let formatted = [];\n  const lines = str.split(\"n\");\n\n  for (let line of lines) {\n    formatted = findLink(formatted, bullets[0]); // first entry isn't a bullet\n\n    bullets.shift(); // removes the non-bullet\n\n    if (bullets.length === 0) {\n      // if there was only text, no bullets, include a break\n      formatted.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this));\n    } else {\n      // otherwise, add an unordered list\n      let lis = bullets.map(bullet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: findLink([], bullet)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 45\n      }, this));\n      formatted.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this));\n    }\n  }\n}\n\nfunction FeaturedProjectSections(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"featured-project-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"featured-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"featured-header\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatText(props.summary)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = FeaturedProjectSections;\nexport default FeaturedProjectSections;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeaturedProjectSections\");","map":{"version":3,"sources":["/Users/ericafu/CMU/erica-w-fu.github.io/src/components/FeaturedProjectSection/FeaturedProjectSection.js"],"names":["React","ThirtyDayDemo","SentenceMosaics","cccImg","formatText","str","formatted","lines","split","line","findLink","bullets","shift","length","push","lis","map","bullet","FeaturedProjectSections","props","title","summary"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAO,eAAP;AAEA,OAAOC,aAAP,MAA0B,iEAA1B;AACA,OAAOC,eAAP,MAA4B,6DAA5B;AACA,OAAOC,MAAP,MAAoB,2EAApB,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrB,MAAI,CAACA,GAAL,EAAU,OAAOA,GAAP,CADW,CAGrB;;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,QAAMC,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAd;;AAEA,OAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAwB;AAEpBD,IAAAA,SAAS,GAAGI,QAAQ,CAACJ,SAAD,EAAYK,OAAO,CAAC,CAAD,CAAnB,CAApB,CAFoB,CAEyB;;AAE7CA,IAAAA,OAAO,CAACC,KAAR,GAJoB,CAIH;;AACjB,QAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACtB;AACAP,MAAAA,SAAS,CAACQ,IAAV,eAAe;AAAA;AAAA;AAAA;AAAA,cAAf;AACH,KAHD,MAGO;AACH;AACA,UAAIC,GAAG,GAAGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,iBAAI;AAAA,kBAAMP,QAAQ,CAAC,EAAD,EAAKO,MAAL;AAAd;AAAA;AAAA;AAAA;AAAA,cAAtB,CAAV;AACAX,MAAAA,SAAS,CAACQ,IAAV,eAAe;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cAAf;AACH;AACJ;AACJ;;AAGD,SAASG,uBAAT,CAAiCC,KAAjC,EAAwC;AAEpC,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAkCA,KAAK,CAACC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKhB,UAAU,CAACe,KAAK,CAACE,OAAP;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH;;KAbQH,uB;AAeT,eAAeA,uBAAf","sourcesContent":["import React from \"react\";\nimport './FeaturedProjectSection.css'; \nimport '../../App.css'\n\nimport ThirtyDayDemo from '../ProjectSection/project-media/30 Day Adulting/30-day-demo.mov';\nimport SentenceMosaics from '../ProjectSection/ProjectMediaComponents/SentenceMosaics.js';\nimport cccImg from  '../ProjectSection/project-media/Cross Country Connections/ccc-mother.jpeg'\n\n// function to formas a string to include newlines\nfunction formatText(str) {\n    if (!str) return str;\n\n    // replace \\n in the string with <br />\n    let formatted = [];\n    const lines = str.split(\"n\");\n\n    for (let line of lines) {\n\n        formatted = findLink(formatted, bullets[0]); // first entry isn't a bullet\n\n        bullets.shift(); // removes the non-bullet\n        if (bullets.length === 0) {\n            // if there was only text, no bullets, include a break\n            formatted.push(<br />);\n        } else {\n            // otherwise, add an unordered list\n            let lis = bullets.map(bullet => <li>{ findLink([], bullet) }</li>);\n            formatted.push(<ul>{ lis }</ul>);\n        }\n    }\n}\n\n\nfunction FeaturedProjectSections(props) {\n\n    return (\n        <>\n            <div className='featured-project-card'>\n                <div className=\"featured-text\">\n                    <h3 className=\"featured-header\">{ props.title }</h3>\n                    <p>{ formatText(props.summary) }</p>\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default FeaturedProjectSections;"]},"metadata":{},"sourceType":"module"}