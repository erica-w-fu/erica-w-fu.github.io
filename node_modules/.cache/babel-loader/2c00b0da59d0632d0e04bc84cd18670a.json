{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ericafu/CMU/react-website-personal/src/components/pages/Projects.js\";\nimport React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport Section from '../ProjectSections.js';\nimport file from '../data/projects.csv';\n\nfunction Projects() {\n  const csvArray = processCSV();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-section\",\n    children: csvArray.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: csvArray.map((item, i) => {\n        /*#__PURE__*/\n        _jsxDEV(Section, {\n          href: \"/\" + i,\n          title: item.title,\n          category: item.category,\n          dates: item.dates,\n          body: item.summary,\n          link: item.link\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: csvArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Projects;\nexport default Projects;\n\nasync function processCSV() {\n  const reader = new FileReader();\n  const str = reader.readAsText(file);\n  const delim = ',';\n  const headers = str.slice(0, str.indexOf('\\n')).split(delim);\n  const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n  const newArray = rows.map(row => {\n    const values = row.split(delim);\n    const eachObject = headers.reduce((obj, header, i) => {\n      obj[header] = values[i];\n      return obj;\n    }, {});\n    return eachObject;\n  });\n  return newArray;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/ericafu/CMU/react-website-personal/src/components/pages/Projects.js"],"names":["React","Section","file","Projects","csvArray","processCSV","length","map","item","i","title","category","dates","summary","link","reader","FileReader","str","readAsText","delim","headers","slice","indexOf","split","rows","newArray","row","values","eachObject","reduce","obj","header"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,QAAQ,GAAGC,UAAU,EAA3B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGD,QAAQ,CAACE,MAAT,GAAgB,CAAhB,gBACC;AAAA,gBAEEF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB;AAAA,gBAAC,OAAD;AAEE,UAAA,IAAI,EAAG,MAAMA,CAFf;AAGE,UAAA,KAAK,EAAGD,IAAI,CAACE,KAHf;AAIE,UAAA,QAAQ,EAAGF,IAAI,CAACG,QAJlB;AAKE,UAAA,KAAK,EAAGH,IAAI,CAACI,KALf;AAME,UAAA,IAAI,EAAGJ,IAAI,CAACK,OANd;AAOE,UAAA,IAAI,EAAGL,IAAI,CAACM;AAPd,WACQL,CADR;AAAA;AAAA;AAAA;AAAA;AASD,OAVD;AAFF,qBADD,gBAeK;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA;AAhBR;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAvBQD,Q;AAyBT,eAAeA,QAAf;;AAGA,eAAeE,UAAf,GAA4B;AAC1B,QAAMU,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,QAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkBhB,IAAlB,CAAZ;AACA,QAAMiB,KAAK,GAAG,GAAd;AAEA,QAAMC,OAAO,GAAGH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAYJ,GAAG,CAACK,OAAJ,CAAY,IAAZ,CAAZ,EAA+BC,KAA/B,CAAqCJ,KAArC,CAAhB;AACA,QAAMK,IAAI,GAAGP,GAAG,CAACI,KAAJ,CAAUJ,GAAG,CAACK,OAAJ,CAAY,IAAZ,IAAkB,CAA5B,EAA+BC,KAA/B,CAAqC,IAArC,CAAb;AAEA,QAAME,QAAQ,GAAGD,IAAI,CAACjB,GAAL,CAAUmB,GAAG,IAAI;AAChC,UAAMC,MAAM,GAAGD,GAAG,CAACH,KAAJ,CAAUJ,KAAV,CAAf;AACA,UAAMS,UAAU,GAAGR,OAAO,CAACS,MAAR,CAAe,CAACC,GAAD,EAAMC,MAAN,EAActB,CAAd,KAAoB;AAClDqB,MAAAA,GAAG,CAACC,MAAD,CAAH,GAAcJ,MAAM,CAAClB,CAAD,CAApB;AACA,aAAOqB,GAAP;AACH,KAHkB,EAGhB,EAHgB,CAAnB;AAIA,WAAOF,UAAP;AACD,GAPgB,CAAjB;AASA,SAAOH,QAAP;AACD","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport Section from '../ProjectSections.js'\nimport file from '../data/projects.csv'\n\nfunction Projects() {\n  const csvArray = processCSV();\n\n  return( \n    <div className=\"project-section\">\n      {csvArray.length>0?\n        <>\n        {\n          csvArray.map((item, i) => {\n            <Section\n              key={ i }\n              href={ \"/\" + i }\n              title={ item.title }\n              category={ item.category }\n              dates={ item.dates }\n              body={ item.summary }\n              link={ item.link }\n            />\n          })\n        }\n      </> : <h1>{csvArray}</h1>}\n    </div>\n  )\n}\n\nexport default Projects;\n\n\nasync function processCSV() {\n  const reader = new FileReader();\n  const str = reader.readAsText(file);\n  const delim = ','\n\n  const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n  const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n  const newArray = rows.map( row => {\n    const values = row.split(delim);\n    const eachObject = headers.reduce((obj, header, i) => {\n        obj[header] = values[i];\n        return obj;\n    }, {})\n    return eachObject;\n  })\n\n  return newArray;\n}"]},"metadata":{},"sourceType":"module"}